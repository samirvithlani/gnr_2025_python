c,cpp,PYTHON:,js
programming : void main
scripting   : js,python,...

server side: python
client side: browser:


statically typed :you have specify datatype of variable..
dynamically typed:you dont  have to specify datatype of variable..

int a =10;
a =    10

c  : machine lang:
cpp: 
python:
      game,data sci,robotics,web application

python: script,file, .py      

------------------------------------------------
implicit typecasting  :
      int x =100.20;
      print("%d",x) 100
explicit typecasting  :
      float --> int

broad type casting
narrow type casting...

small datype -->big data type:
int --> float
float x =100


int x = 200.20
error
narrow typecasting

operators:
unery operators : require min max 1 operand : ++a, python does not support
binary operators :require min 2 operand 
tenery operators : require min 3 operand 

arithmetic operators : + ,- , * , / ,%, // floor , ** expo
logical operators    : and or not
relational operators : <,>,<=,>= , ==,!=
asignment operators  : =,+=,-=,...
ternery operator     : ? :
bitwise operator     : <<,>>,^,|,

membership operator : in not in
identity operator   :is is not

#decision making statements:
if else
switch case* -> match case
loops

if(condition){

}else{

}

indentent block
if condition:
      if part...
else:
      else part        

logical operator:
and or not

cond 1 and && cond 2
T       T     True
T       F     False
F       -     False

cond 1 or && cond 2
T      -       T
F      T       T 
F      F       F




take monthly sal from user: 10000:
find PA sal : 10000* 12 -->
if pa salary >=20 lack tax  20%
if pa salary >=15 lack tax 15%
if pa salary >=10 lack tax  10%
if pa salary >5 lack tax  5%
if pa salary <=5 lack no tax


after tax sal > 10 lacks user is elligible for home loan
after tax sal > 5 lacks user is elligible for car loan
after tax sal > 2 lacks user is elligible for 2 wheeler loan


display total salry PA, deducted tax pa, net salary pa ,and net salary per month, user is eleigble for what kind of loan?

match case:

loops:
entry control loops
 for while

 python does not exit
exit control loops
      do while


fibbonaci series:

a  0
b =1

0 1 1 2 3 5 8 13..


user input please enter op bal --> 10000

7000
enter opening balacne
6000
enter opening balacne
4000
try again later


7000
enter opening balacne
16000
bank acount is opened balance is 16000

chances are 3

chances--

string: "char" 

array: array is collection similar data types
"char"
string: 
1)string stores collection of char
2)string is immutable
3)string is a class
4)string is a data type 'str'
5)string stores data in index manner
6)string is iterable
7)string is subscriptable

mutable and immutable:
data = "abc"
a = 0
b = 1
c = 2

data[0] = "A" modify


task1:
find no of spaces in string....
"this is a string"
ans :3



no = 153: armstrong no
153 = 1^3 + 5^3 + 3^3 --> 

1634 -->
1^4 + 6^4 + 3^4 + 4^4 -> 1634
153 = 1^3 + 5^3 + 3^3

5 digit no


ds in python:
list :
1)list is dynamic : [10,20,30] --> add [10,20,30,40] --> grow --> [10,20] -->shrink
2)list is hetrogenius: [10,"java",True,100]
3)list is ordered : [10,20,30]-->iterate : 10,20,30
4)list allows duplicate element
5)list is mutable
6)list iterable
7)list is subscriptable

list datatype list


tuple
dict
set
array :array is group of same kind of element


press y for continue and n for exit
y

please enter name : aarav

press y for continue and n for exit
y

Niya
press y for continue and n for exit
y

Prachi
press y for continue and n for exit
N

aarav
Niya
parachi

-------------------------------------
dictionary:

1)dict is collection of key value pair {key:value}
2)dict allows duplicate values but not duplicate keys
3)dict is mutable
4)dict is unordered
5)dict is iterable
6)dict is subscriptable
7)dict is dynamic

dta type of dict is dict



using matchcase:

case 1 for add data in dict
case 2 for delete data in dict by key name
case 3 for display data
case 4 exit...

functions:
built in functions
user defined functions:
with returntype with arguments
without returntype without arguments
with returntype without arguments
without returntype with arguments

void add()
int add(int a, int b)

def funName(a,b):
      function body

def funName(a,b):
      function body
      return a+b      

op:
opened
read/ write
close

path:

th.txt
D:\royal\gnr_2025_python\th.txt

functions\FilterDemo1.py
D:\royal\gnr_2025_python\functions\FilterDemo1.py


user data --> write:
name
age
salary

OOPS with python:
encapulation:wrapping data in sigle unit called encapulation
using class and object we can wrap:
class:
class is blupringt of object
class is collection of data memebr and member function
object: object is an entity of class

class    object
Fruit     Apple
Vehicle   Car
institute students
Hospital  Pai,Doc..
Planet    Eart...
Flower    PinkRose..




pol
inh
abstraction

create function addition(self,*args)

check all param should be int in args if yes return sum of all numbers else return message 
all elm should be number


x = addition(10,20,30) -->60
x = addition(10,20,True) -->all parsm .,...


constructor:
constructor is a special function which has same name as class name
use of const is to initilize instance variable of class...

const can be create using __init__(self)
const will call automtically when class object is created..

const can have params but no return type:

type of const:
default const
param const


polymorephsiam:
poly means many phsiam : forms
manu form of the functions

MObile: use -->call
        use -->message
        user -->torch

2 type of polymorephsiam

1)compile time /static binding 
            *method overloading:
                  same name of function is single class with diff arguments:
            *operator overloading
2)run time  / dynamic bindings
            *method overriding



inheirtance:

child class can use prop of parent class this process called inheritance

use:
reusablity of code

type of inheritance:

single inheritance
      1 parent ->1 child
multipule
      more then 1 parent class 1 child class
multilevel inheirtance
      A-->B-->C-->D
hyrical..
      multipule + multilevel
hybride
      pattern*

multilevel inheritance : example     


exams:
daily club python 2 : Monday
set_dict mix        : Tuesday
daily_club_pyhton_med1: Wedneday
daily_club_pyhton_med2: Thursday
daily_club_pyhton_med3:Friday
Friday:final practical exam offline only:  to  6 :7:30

Monday 5 to 6 online:



Method overriding
same name of method create in child class called method over riding:


jio --> airtel

JioCall  -->call
AirtleCall -->call


yug --> yashvi